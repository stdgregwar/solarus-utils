shader{
vertex_source=
[[
  #version 330

  uniform mat4 sol_mvp_matrix;
  uniform mat3 sol_uv_matrix;

  in vec2 sol_vertex;
  in vec2 sol_tex_coord;
  in vec4 sol_color;

  out vec2 sol_vtex_coord;
  out vec4 sol_vcolor;
  void main() {
    gl_Position = sol_mvp_matrix * vec4(sol_vertex,0,1);
    sol_vcolor = sol_color;
    sol_vtex_coord = (sol_uv_matrix * vec3(sol_tex_coord,1)).xy;
  }
]],
fragment_source=
[[
#version 330

//inputs from vertex shader
in vec2 sol_vtex_coord;
in vec2 plain_tex_coord;

//uniform values
uniform sampler2D sol_texture;
uniform sampler2D diffuse;

uniform float distort_factor;

out vec4 color;

void main(void) {
  vec2 offset = (texture(sol_texture,sol_vtex_coord).xy*2)*distort_factor;
  vec4 diff = texture(diffuse,sol_vtex_coord+offset);
  color = diff;
}
]]
}